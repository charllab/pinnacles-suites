// Mixins

// Example - @include gradY(transparent, 0%, rgba($black, .1), 100%);
@mixin gradY($top, $topPos, $bottom, $bottomPos) {
    background: $top;
    background: linear-gradient(to bottom, $top $topPos, $bottom $bottomPos);
}

// Example - @include gradX(transparent, 0%, rgba($black, .1), 100%);
@mixin gradX($left, $leftPos, $right, $rightPos) {
    background: $left;
    background: linear-gradient(to right, $left $leftPos, $right $rightPos);
}

@mixin button-variant-custom($background, $border: $background, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
    color: color-yiq($background);
    @include gradient-bg($background);
    border-color: $border;
    @include box-shadow($btn-box-shadow);

    @include hover {
        color: color-yiq($hover-background);
        @include gradient-bg($hover-background);
        border-color: $hover-border;
    }

    &:focus,
    &.focus {
        // Avoid using mixin so we can pass custom focus shadow properly
        @if $enable-shadows {
            box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
        } @else {
            box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
        }
    }

    // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
        color: color-yiq($background);
        background-color: $background;
        border-color: $border;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
        color: color-yiq($active-background);
        background-color: $active-background;
        @if $enable-gradients {
            background-image: none; // Remove the gradient for the pressed/active state
        }
        border-color: $active-border;

        &:focus {
            // Avoid using mixin so we can pass custom focus shadow properly
            @if $enable-shadows {
                box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
            } @else {
                box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
            }
        }
    }
}

// BEM selectors ===================

@mixin e($name) {
    @at-root &__#{$name} {
        @content
    }
}
@mixin m($name) {
    @at-root &--#{$name} {
        @content
    }
}

// Media Queries ===================

$tablet-width: 48em;
$desktop-width: 73.143em;

@mixin random-max($wmax) {
    @media (max-width: #{$wmax}em) {
        @content;
    }
}

@mixin random-min($wmin) {
    @media (min-width: #{$wmin}em) {
        @content;
    }
}

@mixin random-from-to($wfrom,$wto) {
    @media (min-width: #{$wfrom}em) and (max-width: #{$wto}em) {
        @content;
    }
}

@mixin tablet {
    @media (min-width: #{$tablet-width}) {
        @content;
    }
}

@mixin desktop {
    @media (min-width: #{$desktop-width + 0.071em}) {
        @content;
    }
}